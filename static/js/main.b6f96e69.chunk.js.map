{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatesTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyDeA,MAvDf,SAAkBC,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,KAGlBC,EAAWC,iBAAO,MAExBC,qBAAU,WACTF,EAASG,QAAQC,WAGlB,IAAMC,EAAe,SAAAC,GACpBP,EAASO,EAAEC,OAAOC,QAcnB,OACC,sBAAMC,UAAU,YAAYC,SAZR,SAAAJ,GACpBA,EAAEK,iBAEFf,EAAMc,SAAS,CACdE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMlB,IAGPC,EAAS,KAIT,SACEH,EAAMqB,KACN,qCACC,uBAAOR,UAAU,kBAChBS,KAAK,OACLC,YAAY,mBACZX,MAAOV,EACPsB,KAAK,OACLC,SAAUhB,EACViB,IAAKtB,IAEN,wBAAQS,UAAU,gBAAlB,uBAGD,qCACC,uBAAQA,UAAU,aAClBS,KAAK,OACLC,YAAY,aACZX,MAAOV,EACPsB,KAAK,OACLC,SAAUhB,EACViB,IAAKtB,IAEL,wBAAQS,UAAU,WAAlB,4B,eCLUc,MAxCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACpC9B,mBAAS,CAChCe,GAAI,KACJJ,MAAO,KAHoD,mBACrDS,EADqD,KAC/CW,EAD+C,KAc5D,OAAIX,EAAKL,GACD,cAAC,EAAD,CAAUK,KAAMA,EAAMP,SATT,SAAAF,GACpBmB,EAAWV,EAAKL,GAAIJ,GACpBoB,EAAQ,CACPhB,GAAI,KACJJ,MAAO,QAQFgB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAChB,sBACCtB,UAAWqB,EAAKE,WAAa,oBAAsB,WADpD,UAIC,qBAAKvB,UAAU,OAAqBwB,QAAS,kBAAMR,EAAaK,EAAKlB,KAArE,SACEkB,EAAKd,MADoBc,EAAKlB,IAGhC,sBAAKH,UAAU,QAAf,UACC,cAAC,IAAD,CACCwB,QAAS,kBAAMP,EAAWI,EAAKlB,KAC/BH,UAAU,gBAEX,cAAC,IAAD,CACCwB,QAAS,kBAAML,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAIJ,MAAOsB,EAAKd,QAClDP,UAAU,mBAZPsB,OC6BOG,MAnDf,WAAqB,IAAD,EACOrC,mBAAS,IADhB,mBACZ2B,EADY,KACLW,EADK,KAmCnB,OACC,gCACC,6DACA,cAAC,EAAD,CACCzB,SApCa,SAAAoB,GACf,GAAKA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAApC,CAIA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA+BR,cAAC,EAAD,CACCb,MAAOA,EACPC,aAjBkB,SAAAb,GACpB,IAAI0B,EAAed,EAAMK,KAAI,SAAAC,GAI5B,OAHIA,EAAKlB,KAAOA,IACfkB,EAAKE,YAAcF,EAAKE,YAElBF,KAERK,EAASG,IAWPZ,WAxBgB,SAAAd,GAClB,IAAM2B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKlB,KAAOA,KAExDuB,EAASI,IAsBPZ,WAhCgB,SAACc,EAAQC,GACtBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAG5CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAGA,EAAKhC,KAAO6B,EAASC,EAAWE,eCVpDC,MARf,WACE,OACE,qBAAKpC,UAAU,WAAf,SACC,cAAC,EAAD,OCFLqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b6f96e69.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n\tconst [input, setInput] = useState('');\r\n\r\n\tconst inputRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus();\r\n\t})\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetInput(e.target.value);\r\n\t}\r\n\t\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tprops.onSubmit({\r\n\t\t\tid: Math.floor(Math.random() * 1000),\r\n\t\t\ttext: input\r\n\t\t});\r\n\r\n\t\tsetInput('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='todo-form' onSubmit={handleSubmit}>\r\n\t\t\t{props.edit ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input className='todo-input edit'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='update your item'\r\n\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\tname='text'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='todo-btn edit'>Update</button>\r\n\t\t\t\t</>\r\n\t\t\t) :\t(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input  className='todo-input'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='add a todo'\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tname='text'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='todo-btn'>Add todo</button>\r\n\t\t\t\t</>\t\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid: null,\r\n\t\tvalue: ''\r\n\t});\r\n\r\n\tconst submitUpdate = value => {\r\n\t\tupdateTodo(edit.id, value);\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: ''\r\n\t\t});\r\n\t}\r\n\r\n\tif (edit.id) {\r\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n\t}\r\n\r\n\treturn todos.map((todo, index) => (\r\n\t\t<div\r\n\t\t\tclassName={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n\t\t\tkey={index}\r\n\t\t>\r\n\t\t\t<div className='text' key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n\t\t\t\t{todo.text}\r\n\t\t\t</div>\r\n\t\t\t<div className='icons'>\r\n\t\t\t\t<RiCloseCircleLine\r\n\t\t\t\t\tonClick={() => removeTodo(todo.id)}\r\n\t\t\t\t\tclassName='delete-icon'\r\n\t\t\t\t/>\r\n\t\t\t\t<TiEdit\r\n\t\t\t\t\tonClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n\t\t\t\t\tclassName='edit-icon'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t));\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n\tconst [todos, setTodos] = useState([]);\r\n\r\n\tconst addTodo = todo => {\r\n\t\tif (!todo.text || /^\\s*$/.test(todo.text)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst newTodos = [todo, ...todos];\r\n\r\n\t\tsetTodos(newTodos);\r\n\t};\r\n\r\n\tconst updateTodo = (todoId, newValue) => {\r\n\t\tif (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetTodos(prev => prev.map(item=>(item.id === todoId ? newValue : item)));\r\n\t};\r\n\r\n\tconst removeTodo = id => {\r\n\t\tconst removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n\t\tsetTodos(removeArr);\r\n\t};\r\n\r\n\tconst completeTodo = id => {\r\n\t\tlet updatesTodos = todos.map(todo => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\ttodo.isComplete = !todo.isComplete;\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tsetTodos(updatesTodos);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>What is the plan for today?</h1>\r\n\t\t\t<TodoForm\r\n\t\t\t\tonSubmit={addTodo}\r\n\t\t\t/>\r\n\t\t\t<Todo\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcompleteTodo={completeTodo}\r\n\t\t\t\tremoveTodo={removeTodo}\r\n\t\t\t\tupdateTodo={updateTodo}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n     <TodoList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}